-- -------------------------
-- Tables
-- -------------------------
CREATE TABLE IF NOT EXISTS majors (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    code CITEXT UNIQUE NOT NULL,
    name TEXT NOT NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT now()
);
CREATE TABLE IF NOT EXISTS terms (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    code TEXT UNIQUE NOT NULL,
    starts_on DATE NOT NULL,
    ends_on DATE NOT NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    CHECK (starts_on < ends_on)
);
CREATE TABLE IF NOT EXISTS faculty_registry (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email CITEXT UNIQUE NOT NULL,
    teacher_number TEXT UNIQUE NOT NULL,
    first_name TEXT NOT NULL,
    last_name TEXT NOT NULL,
    active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT now()
);
CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    role user_role NOT NULL,
    email CITEXT NOT NULL UNIQUE,
    password_hash TEXT NOT NULL,
    first_name TEXT NOT NULL,
    last_name TEXT NOT NULL,
    student_number TEXT UNIQUE,
    teacher_number TEXT UNIQUE,
    reset_token TEXT,
    token_created_at TIMESTAMPTZ,
    account_created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    CHECK (email ~* '^[^@]+@[^@]+\.edu$')
);
CREATE TABLE IF NOT EXISTS user_majors (
    user_id BIGINT NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    major_code CITEXT NOT NULL REFERENCES majors (code) ON UPDATE CASCADE,
    PRIMARY KEY (user_id, major_code)
);