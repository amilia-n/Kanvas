-- -------------------------
-- Tables
-- -------------------------
CREATE TABLE IF NOT EXISTS majors (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    code CITEXT UNIQUE NOT NULL,
    name TEXT NOT NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT now()
);
CREATE TABLE IF NOT EXISTS terms (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    code TEXT UNIQUE NOT NULL,
    starts_on DATE NOT NULL,
    ends_on DATE NOT NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    CHECK (starts_on < ends_on)
);
CREATE TABLE IF NOT EXISTS faculty_registry (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email CITEXT UNIQUE NOT NULL,
    teacher_number TEXT UNIQUE NOT NULL,
    first_name TEXT NOT NULL,
    last_name TEXT NOT NULL,
    active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT now()
);
CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    role user_role NOT NULL,
    email CITEXT NOT NULL UNIQUE,
    password_hash TEXT NOT NULL,
    first_name TEXT NOT NULL,
    last_name TEXT NOT NULL,
    student_number TEXT UNIQUE,
    teacher_number TEXT UNIQUE,
    reset_token TEXT,
    token_created_at TIMESTAMPTZ,
    account_created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    CHECK (email ~* '^[^@]+@[^@]+\.edu$')
);
CREATE TABLE IF NOT EXISTS user_majors (
    user_id BIGINT NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    major_code CITEXT NOT NULL REFERENCES majors (code) ON UPDATE CASCADE,
    PRIMARY KEY (user_id, major_code)
);
CREATE TABLE IF NOT EXISTS courses (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    code TEXT UNIQUE NOT NULL,
    name TEXT NOT NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT now()
);
CREATE TABLE IF NOT EXISTS course_offering (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    course_id BIGINT NOT NULL REFERENCES courses (id) ON DELETE CASCADE,
    code TEXT NOT NULL,           
    name TEXT NOT NULL,
    description TEXT NOT NULL,
    term_id BIGINT NOT NULL REFERENCES terms (id) ON DELETE RESTRICT,
    teacher_id BIGINT REFERENCES users (id) ON DELETE RESTRICT,
    credits INT NOT NULL CHECK (credits > 0 AND credits <= 5),
    section TEXT NOT NULL DEFAULT 'A',   
    total_seats INT NOT NULL CHECK (total_seats >= 0),
    enrollment_open BOOLEAN NOT NULL DEFAULT TRUE,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    CONSTRAINT uq_offering_code_term_section UNIQUE (code, term_id, section),
    CONSTRAINT chk_offering_code_format CHECK (code ~ '^[A-Z]{2,5}[0-9]{3}$')
);
CREATE TABLE IF NOT EXISTS course_prereqs (
    offering_id BIGINT NOT NULL REFERENCES course_offering (id) ON DELETE CASCADE,
    prereq_offering_id BIGINT NOT NULL REFERENCES course_offering (id) ON DELETE CASCADE,
    PRIMARY KEY (offering_id, prereq_offering_id),
    CHECK (offering_id <> prereq_offering_id)
);